version: "3.9"
volumes:
  student-card-db:
  student-db:
  zipkin-db:
  zookeeper-secret:
  zookeeper-data:
  zookeeper-log:
  kafka-secret:
  kafka-data:
services:
  student-card-db:
    image: postgres:14.2-alpine
    container_name: student-card-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=Password01!
      - POSTGRES_DB=student_card
    ports:
      - "5432:5432"
    volumes:
      - student-card-db:/var/lib/postgresql/data/

  student-db:
    image: postgres:14.2-alpine
    container_name: student-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=Password01!
      - POSTGRES_DB=student
    ports:
      - "5433:5432"
    volumes:
      - student-db:/var/lib/postgresql/data/

  zipkin-db:
    image: mariadb:10.7.4-focal
    container_name: zipkin-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MARIADB_USER=zipkin
      - MARIADB_PASSWORD=zipkinSup3rS3cr3tPaSSword!
      - MARIADB_RANDOM_ROOT_PASSWORD=R00tIsSup3rT0pS3cretus3r.
      - MARIADB_DATABASE=zipkin
    volumes:
      - ./db/zipkin-db-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - zipkin-db:/var/lib/mysql

  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:7.1.1
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-secret:/etc/zookeeper/secrets
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.1.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secret:/etc/kafka/secrets

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: always
    depends_on:
      - kafka
      - zipkin-db
    ports:
      - "9411:9411"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=zipkin-db:3306
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkinSup3rS3cr3tPaSSword!

  config-server:
    build:
      dockerfile: Dockerfile-config
      context: ./
    container_name: config-server
    restart: always
    depends_on:
      - kafka
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT-LABEL=docker
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=$${KAFKA_ADDR:http://kafka:29092}
      - SERVER_PORT=8888
    ports:
      - "8888:8888"

  eureka-server:
    build:
      dockerfile: Dockerfile-eureka
      context: ./
    container_name: eureka-server
    restart: always
    depends_on:
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
    ports:
      - "8761:8761"

  api-gateway:
    build:
      dockerfile: Dockerfile-apigateway
      context: ./
    container_name: api-gateway
    restart: always
    depends_on:
      - eureka-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
    ports:
      - "8765:8765"

  student-card:
    build:
      dockerfile: Dockerfile-studentcard
      context: ./
    restart: always
    depends_on:
      - eureka-server
      - student-card-db
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
    ports:
      - "8080-8089:8081"

  student:
    build:
      dockerfile: Dockerfile-student
      context: ./
    restart: always
    depends_on:
      - eureka-server
      - student-db
      - config-server
      - kafka
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
    ports:
      - "8090-8099:8080"
