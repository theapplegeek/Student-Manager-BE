version: "3.9"
volumes:
  student-card-db:
  student-db:
  zipkin-db:
  rabbitmq-data:
  application-log:
services:
  student-card-db:
    image: postgres:14.2-alpine
    container_name: student-card-db
    restart: always
    deploy:
      resources:
        limits:
          memory: 100M
    environment:
      - POSTGRES_PASSWORD=Password01!
      - POSTGRES_DB=student_card
    ports:
      - "5432:5432"
    volumes:
      - student-card-db:/var/lib/postgresql/data/

  student-db:
    image: postgres:14.2-alpine
    container_name: student-db
    restart: always
    deploy:
      resources:
        limits:
          memory: 100M
    environment:
      - POSTGRES_PASSWORD=Password01!
      - POSTGRES_DB=student
    ports:
      - "5433:5432"
    volumes:
      - student-db:/var/lib/postgresql/data/

  zipkin-db:
    image: mariadb:10.7.4-focal
    container_name: zipkin-db
    restart: always
    deploy:
      resources:
        limits:
          memory: 100M
    ports:
      - "3306:3306"
    environment:
      - MARIADB_USER=zipkin
      - MARIADB_PASSWORD=zipkinSup3rS3cr3tPaSSword!
      - MARIADB_ROOT_PASSWORD=R00tIsSup3rT0pS3cretus3r.
      - MARIADB_DATABASE=zipkin
    volumes:
      - ./db/zipkin-db-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - zipkin-db:/var/lib/mysql

  zipkin:
    image: openzipkin/zipkin:2.23
    container_name: zipkin
    restart: always
    depends_on:
      - rabbitmq
      - zipkin-db
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "9411:9411"
    environment:
      - RABBIT_URI=amqp://rabbitmq:admin@rabbitmq:5672
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=zipkin-db:3306
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkinSup3rS3cr3tPaSSword!
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport

  elasticsearch:
    image: elasticsearch:7.17.4
    container_name: elasticsearch
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport

  logstash:
    image: logstash:7.17.4
    container_name: logstash
    restart: always
    depends_on:
      - elasticsearch
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - LS_JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - ./logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf
      - application-log:/usr/share/logstash/pipeline

  kibana:
    image: kibana:7.17.4
    container_name: kibana
    restart: always
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "5601:5601"
    environment:
      - KIBANA_JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport -XX:MaxRAMFraction=1

  rabbitmq:
    image: rabbitmq:3.10.2-management-alpine
    container_name: rabbitmq
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=admin
      - vm_memory_high_watermark.absolute=256M
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  config-server:
    build:
      dockerfile: Dockerfile-config
      context: ./
    container_name: config-server
    restart: always
    depends_on:
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "8888:8888"
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT-LABEL=docker
      - SERVER_PORT=8888
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - application-log:/app/logs/

  eureka-server:
    build:
      dockerfile: Dockerfile-eureka
      context: ./
    container_name: eureka-server
    restart: always
    depends_on:
      - config-server
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "8761:8761"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - application-log:/app/logs/

  api-gateway:
    build:
      dockerfile: Dockerfile-apigateway
      context: ./
    container_name: api-gateway
    restart: always
    depends_on:
      - eureka-server
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "8765:8765"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - application-log:/app/logs/

  student-card:
    build:
      dockerfile: Dockerfile-studentcard
      context: ./
    restart: always
    depends_on:
      - eureka-server
      - student-card-db
      - config-server
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "8080-8089:8081"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - application-log:/app/logs/

  student:
    build:
      dockerfile: Dockerfile-student
      context: ./
    restart: always
    depends_on:
      - eureka-server
      - student-db
      - config-server
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "8090-8099:8080"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_LABEL=docker
      - RABBITMQ_USERNAME=rabbitmq
      - RABBITMQ_PASSWORD=admin
      - GIT_USERNAME=TheAppleGeeK
      - GIT_PASSWORD=glpat-DxzszDxSghbQWsqJzcz9
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport
    volumes:
      - application-log:/app/logs/
